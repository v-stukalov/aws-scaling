{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation sample template shows how to create an SQS Queue with Amazon CloudWatch Alarms on Queue Depth. **WARNING** This template creates an Amazon SQS Queue and one or more Amazon CloudWatch alarms. You will be billed for the AWS resources used if you create a stack from this template.",
  "Parameters": {
    "SourceCodeBucket": {
      "Type": "String"
    },
    "AlarmEmail": {
      "Default": "nobody@amazon.com",
      "Description": "Email address to notify if operational problems arise",
      "Type": "String"
    }
  },
  "Resources": {
    "RootRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:Get*",
                    "s3:List*"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "SourceCodeBucket"
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "RootInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "RootRole"
          }
        ]
      }
    },
    "Ec2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": "ami-6057e21a",
        "InstanceType": "t2.micro",
        "KeyName": "sample",
        "IamInstanceProfile": {
          "Ref": "RootInstanceProfile"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n",
                "set -o verbose\n",
                "yum -y update\n",
                "yum -y install java-1.8.0\n",
                "yum -y remove java-1.7.0-openjdk\n",
                "mkdir /root/.aws\n",
                "aws s3 cp s3://source-code-bucket-aws-scaling/credentials /root/.aws/credentials\n",
                "aws s3 cp s3://source-code-bucket-aws-scaling/aws-scaling-0.1.0.jar aws-scaling-0.1.0.jar\n",
                "nohup java -jar aws-scaling-0.1.0.jar --thumbnail.requests.queue=",
                {
                  "Fn::GetAtt": [
                    "ThumbnailRequests",
                    "QueueName"
                  ]
                },
                " --thumbnail.results.queue=",
                {
                  "Fn::GetAtt": [
                    "ThumbnailResults",
                    "QueueName"
                  ]
                },
                " --thumbnails.bucket=",
                {
                  "Ref": "Thumbnails"
                },
                " --spring.profiles.active=processor > aws_scaling.log"
              ]
            ]
          }
        }
      }
    },
    "Thumbnails": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead"
      }
    },
    "ThumbnailRequestsDLQ": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "ReceiveMessageWaitTimeSeconds": 20,
        "MaximumMessageSize": 262144,
        "MessageRetentionPeriod": 345600,
        "VisibilityTimeout": 30
      }
    },
    "ThumbnailRequests": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "ReceiveMessageWaitTimeSeconds": 20,
        "MaximumMessageSize": 262144,
        "MessageRetentionPeriod": 345600,
        "VisibilityTimeout": 30,
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "ThumbnailRequestsDLQ",
              "Arn"
            ]
          },
          "maxReceiveCount": 3
        }
      }
    },
    "ThumbnailResults": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "ReceiveMessageWaitTimeSeconds": 20,
        "MaximumMessageSize": 262144,
        "MessageRetentionPeriod": 345600,
        "VisibilityTimeout": 30
      }
    },
    "AlarmTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [
          {
            "Endpoint": {
              "Ref": "AlarmEmail"
            },
            "Protocol": "email"
          }
        ]
      }
    },
    "QueueDepthAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm if queue depth grows beyond 10 messages",
        "Namespace": "AWS/SQS",
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": {
              "Fn::GetAtt": [
                "ThumbnailRequests",
                "QueueName"
              ]
            }
          }
        ],
        "Statistic": "Sum",
        "Period": "300",
        "EvaluationPeriods": "1",
        "Threshold": "10",
        "ComparisonOperator": "GreaterThanThreshold",
        "AlarmActions": [
          {
            "Ref": "AlarmTopic"
          }
        ],
        "InsufficientDataActions": [
          {
            "Ref": "AlarmTopic"
          }
        ]
      }
    }
  },
  "Outputs": {
    "SourceQueueURL": {
      "Description": "URL of the source queue",
      "Value": {
        "Ref": "ThumbnailRequests"
      }
    },
    "SourceQueueARN": {
      "Description": "ARN of the source queue",
      "Value": {
        "Fn::GetAtt": [
          "ThumbnailRequests",
          "Arn"
        ]
      }
    },
    "ResultQueueURL": {
      "Description": "URL of the result queue",
      "Value": {
        "Ref": "ThumbnailResults"
      }
    },
    "ResultQueueARN": {
      "Description": "ARN of the result queue",
      "Value": {
        "Fn::GetAtt": [
          "ThumbnailResults",
          "Arn"
        ]
      }
    },
    "DeadLetterQueueURL": {
      "Description": "URL of the dead letter queue",
      "Value": {
        "Ref": "ThumbnailRequestsDLQ"
      }
    },
    "DeadLetterQueueARN": {
      "Description": "ARN of the dead letter queue",
      "Value": {
        "Fn::GetAtt": [
          "ThumbnailRequestsDLQ",
          "Arn"
        ]
      }
    }
  }
}